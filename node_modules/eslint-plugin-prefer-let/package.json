{
  "_args": [
    [
      {
        "raw": "eslint-plugin-prefer-let",
        "scope": null,
        "escapedName": "eslint-plugin-prefer-let",
        "name": "eslint-plugin-prefer-let",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\MAMP\\htdocs\\joga_web"
    ]
  ],
  "_from": "eslint-plugin-prefer-let@latest",
  "_id": "eslint-plugin-prefer-let@1.0.1",
  "_inCache": true,
  "_location": "/eslint-plugin-prefer-let",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eslint-plugin-prefer-let-1.0.1.tgz_1510931007448_0.8301788701210171"
  },
  "_npmUser": {
    "name": "cowboyd",
    "email": "cowboyd@frontside.io"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-prefer-let",
    "scope": null,
    "escapedName": "eslint-plugin-prefer-let",
    "name": "eslint-plugin-prefer-let",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-prefer-let/-/eslint-plugin-prefer-let-1.0.1.tgz",
  "_shasum": "ef7216bcabf6d4cb0a7b7b5ecf55e85e9ee58067",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-prefer-let",
  "_where": "C:\\MAMP\\htdocs\\joga_web",
  "author": {
    "name": "Charles Lowell"
  },
  "dependencies": {
    "requireindex": "~1.1.0"
  },
  "description": "Rule to prefer using `let` to bind names to values",
  "devDependencies": {
    "eslint": "^3.5.0",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "ef7216bcabf6d4cb0a7b7b5ecf55e85e9ee58067",
    "tarball": "https://registry.npmjs.org/eslint-plugin-prefer-let/-/eslint-plugin-prefer-let-1.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "homepage": "https://github.com/cowboyd/eslint-plugin-prefer-let",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "cowboyd",
      "email": "cowboyd@frontside.io"
    }
  ],
  "name": "eslint-plugin-prefer-let",
  "optionalDependencies": {},
  "readme": "# eslint-plugin-prefer-let\n\n[![Build Status](https://travis-ci.org/cowboyd/eslint-plugin-prefer-let.svg?branch=master)](https://travis-ci.org/cowboyd/eslint-plugin-prefer-let)\n\nAn eslint plugin to encourage semantic of usage of `let` and `const`.\n\nThings being basically equal, code should speak to humans first, and\ncomputers second. As such, JavaScript codebases should follow the\nlong-standing conventions set forth by both formal symbolic logic and\nthe practice of functional programming.\n\nUsage of the `const` keyword to bind an _intermediate_ value of a\ncomputation places emphasis on the compiler and and its role in\nensuring that a _reference_ never changes. By contrast using `let` in\nthe same situation reads, in plain English, the programmer's intent to\ndeclare a name value binding.\n\nIt is this plugin's opinion that preventing reassignment of `let`\nbindings is better accomplished as a linting rule.\n\n`const` bindings _are_ allowed at the top-level of a module's scope so\nthat it can represent a value that is a true, dependency-free constant\nsuch as `π`, `ℯ`, etc...\n\n\nGood:\n\n``` javascript\nconst PI = 3.14;\n\nfunction area(radius) {\n  let r2 = radius * radius;\n  return PI * r2;\n}\n\n```\n\nBad:\n\n``` javascript\nfunction volume(radius) {\n  const a = area(radius);\n  return a * radius / 2\n}\n\n```\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm i eslint --save-dev\n```\n\nNext, install `eslint-plugin-prefer-let`:\n\n```\n$ npm install eslint-plugin-prefer-let --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-prefer-let` globally.\n\n## Usage\n\nAdd `prefer-let` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n    \"plugins\": [\n        \"prefer-let\"\n    ]\n}\n```\n\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"rules\": {\n        \"prefer-let/prefer-let\": 2\n    }\n}\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha tests --recursive"
  },
  "version": "1.0.1"
}
